{
	"info": {
		"_postman_id": "4f16b027-979b-42a0-9805-2e004ddf13e1",
		"name": "2ristPanel RESTful B2C API",
		"description": "\r\n<h3><a target=\"_blank\" href=\"https://www.aparat.com/v/I5EP3\">ویدیو آموزشی به زبان فارسی</a></h3>\r\n<div>\r\n    <p>The 2ristPanel API allows you to programmatically access to your account with ease.</p>\r\n    <h1 id=\"overview\">Overview</h1>\r\n    <ol>\r\n        <li>\r\n            <p>You need a valid <a href=\"#authentication\">Bearer jwt Token</a> to send requests to the API endpoints. You can get your public and private key from the <a target=\"_blank\" href=\"https://app.2ristpanel.com/Main/Panel/Profile/ApiManagements\">Api Key Managements</a>.</p>\r\n        </li>\r\n        <li>\r\n            <p>The API has an access <a href=\"#time-limits\">Time Limit</a> applied to it.</p>\r\n        </li>\r\n        <li>\r\n            <p>The 2ristPanel API will only respond to secured communication done over HTTPS. HTTP requests will be sent a <code>301</code> redirect to corresponding HTTPS resources.</p>\r\n        </li>\r\n        <li>\r\n            <p>The API calls will respond with appropriate <a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\">HTTP status codes</a> for all requests. Within 2ristPanel Client, when a response is received, the status code is highlighted and is accompanied by a help text that indicates the possible meaning of the response code. A <code>200 OK</code> indicates all went well, while <code>4XX</code> or <code>5XX</code> response codes indicate an error from the requesting client or our API servers respectively.</p>\r\n        </li>\r\n    </ol>\r\n    <h1 id=\"authentication\">Authentication</h1>\r\n    <p>An Bearer jwt Token is required to be sent as part of every request to the 2ristPanel API, in the form of an <code>Authorization : Bearer yJhbIkpXCJ9.eyJVc2VyS....... </code> request header.</p>\r\n    <blockquote>\r\n        <p>If you do not have an API Key, you can easily generate one by heading over to the <a href=\"https://app.2ristpanel.com/Main/Panel/Profile/ApiManagements\">Api Key Managements</a></p>\r\n    </blockquote>\r\n    <p>\r\n        An API Public and Private Key tells our API server that the request it received came from you.\r\n        <br />\r\n        you can genrate new token via <a href=\"#operations-API-post_v1_API_GenerateNewToken\">GenerateNewToken</a> Method\r\n        <br />\r\n    </p>\r\n    <h2 id=\"api-key-related-error-response\">API Key related error response</h2>\r\n    <p>If an API Key is missing, malformed, or invalid, you will receive a <code>401 Unauthorised</code> response code and the following JSON response:</p>\r\n    <pre class=\"  language-undefined\"><code class=\"language-undefined\">\r\n    {\r\n    \"message\": \"The Authorization Token is missing Or does not send in the header.\",\r\n    \"title\": \"SessionRevokingMessage\",\r\n    \"notificationViewType\": 1,\r\n    \"notificationType\": 2,\r\n    \"state\": false\r\n    }\r\n</code></pre>\r\n    <h1 id=\"time-limits\">Time Limits</h1>\r\n    <p>After receiving a new token you will have <code>3 minutes</code> to use the token. After the specified time the token will be expired and you must create a new token</p>\r\n</div>\r\n\r\n<h1 id=\"terms-of-use\">API Url's</h1>\r\n\r\n<table>\r\n    <thead>\r\n    <th>API Type</th>\r\n    <th>API URL</th>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>Test</td>\r\n            <td>https://beta-api.2ristpanel.com</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Production</td>\r\n            <td>https://api.2ristpanel.com</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h1 id=\"dev-env\">Development</h1>\r\n\r\nFor Test Purposes, Download Environment and collection below and import it in Postman\r\n<br />\r\nEnvironment : <a target=\"_blank\" href=\"docs/development.postman_environment.json\">Development Environment</a> (Note That these values are only valid in the demo version\r\n)\r\n<br />\r\nCollection : <a target=\"_blank\" href=\"docs/b2c.postman_collection.json\">Postman Collection</a>\r\n\r\n<table>\r\n    <thead>\r\n    <th>VARIABLE</th>\r\n    <th>INITIAL VALUE</th>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>baseUrl</td>\r\n            <td>https://beta-api.2ristpanel.com</td>\r\n        </tr>\r\n        <tr>\r\n            <td>publicKey</td>\r\n            <td>28GW9JEROEY5BDN</td>\r\n        </tr>\r\n        <tr>\r\n            <td>privateKey</td>\r\n            <td>8059c822-4205-472d-bc40-c5e8669af403</td>\r\n        </tr>\r\n        <tr>\r\n            <td>authorization</td>\r\n            <td></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h1 id=\"ok-result\">\r\n    Responses and Errors\r\n</h1>\r\n\r\nResult of Response 200 can be an object with the requested content or an error.\r\nYou can see the list of known errors below\r\n\r\n\r\n<table>\r\n    <thead>\r\n    <th>Code</th>\r\n    <th>Description</th>\r\n    <th>توضیحات</th>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>100</td>\r\n            <td>There is a problem with one of the Unique IDs sent. The name of the ID is mentioned in the error</td>\r\n            <td>ایرادی در یکی از آیدی های یونیک ارسالی وجود دارد. نام آی دی در ارور ذکر شده است</td>\r\n        </tr>\r\n        <tr>\r\n            <td>101</td>\r\n            <td>The requested number of one of the tickets is more than the inventory. The name of the requested ticket and the remaining number are mentioned in the error.</td>\r\n            <td>تعداد درخواستی یکی از تیکت ها بیشتر از  موجودی میباشد نام تیکت درخواستی و تعداد باقی مانده در ارور ذکر شده است</td>\r\n        </tr>\r\n        <tr>\r\n            <td>102</td>\r\n            <td>The requested service requires the names of the passengers. Please send the relevant field in a completed form. The service name is listed in the error</td>\r\n            <td>برنامه درخواستی نیاز به اسامی مسافران دارد لطفا فیلد مربوطه را به صورت تکمیل شده ارسال نمایید نام برنامه در ارور ذکر شده است</td>\r\n        </tr>\r\n        <tr>\r\n            <td>103</td>\r\n            <td>The requested service requires the names of the passengers along with the national code or passport number and its type. Please send the relevant field in a completed form. The service name is listed in the error</td>\r\n            <td>\r\n                سرویس درخواستی، نیاز به اسامی مسافران به همراه کد ملی یا شماره پاسپورت و نوع آن دارد لطفا فیلد مربوطه را به صورت تکمیل شده ارسال نمایید. نام سرویس در ارور ذکر شده است\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>104</td>\r\n            <td>\r\n                There is a problem with opening the cash desk automatically.\r\n                Please make sure that in the panel settings, the cash desk closure is activated automatically, and if         you have the open cash desk, close it and send the request again.\r\n            </td>\r\n            <td>\r\n                ایرادی در باز نمودن صندوق فروش به صورت اتوماتیک به وجود آمده است.\r\n                لطفا اطمینان حاصل نمایید که در تنظیمات پنل، بسته شدن صندوق فروش به صورت اتوماتیک فعال است و در صورتی که صندوق باز دارید آن را بسته و مجددا درخواست را ارسال نمایید.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>105</td>\r\n            <td>The temporary reservation reference has a problem, has been canceled or has been used before, please note that temporary reservations only take up to 30 minutes, after which your reference will be invalidated.</td>\r\n            <td>رفرنس رزرو موقت ایراد دارد، باطل شده و یا قبلا استفاده شده است است لطفا توجه داشته باشید که رزرو های موقت فقط تا 30 دقیقه زمان دارند و بعد از آن رفرنس شما باطل میشود  </td>\r\n        </tr>\r\n        <tr>\r\n            <td>106</td>\r\n            <td>You are allowed to book 7 items at a time and 15 tickets per item at each request. This error indicates that you have requested more than the specified number.</td>\r\n            <td>شما در هر درخواست اجازه رزرو موقت 7 آیتم و در هر آیتم 15 بلیط را دارا هستید این ارور نشان دهنده این است که شما بیش از تعداد ذکر شده درخواست داده اید</td>\r\n        </tr>\r\n        <tr>\r\n            <td>107</td>\r\n            <td>Booking time is over</td>\r\n            <td>زمان رزرو موقت به پایان رسیده است</td>\r\n        </tr>\r\n        <tr>\r\n            <td>108</td>\r\n            <td>The problem is with the information sent to the passenger list. Please check the manifest and send data again</td>\r\n            <td>ایراد مربوط به اطلاعات ارسالی در لیست مسافرین است. لطفا لیست را بررسی و مجددا ارسال نمایید</td>\r\n        </tr>\r\n        <tr>\r\n            <td>109</td>\r\n            <td>Your purchase credit on the panel is over or less than allowed. Please check and charge your credit</td>\r\n            <td>اعتبار خرید شما در پنل به اتمام رسیده یا کمتر از حد مجاز میباشد لطفا اعتبار خود را بررسی و شارژ نمایید</td>\r\n        </tr>\r\n        <tr>\r\n            <td>110</td>\r\n            <td>This license Is not valid on this Service or not valid at all</td>\r\n            <td>مجوز ارسالی برای این برنامه اعتبار ندارد</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h1 id=\"support\">Support</h1>\r\n<p>For help regarding accessing the 2ristPanel API, feel free to drop a ticket at our <a target=\"_blank\" href=\"https://support.2ristpanel.ir\">Support</a> system.</p>\r\n<p>In the event you receive a <code>503</code> response from our servers, it implies that we have hit an unexpected spike in API access traffic and would usually be operational within the next 5 minutes. If the outage persists, or your receive any other form of <code>5XX</code> error, kindly let us know.</p>\r\n\r\n\r\n<h1 id=\"terms-of-use\">Developer And Ownership Details</h1>\r\n\r\nLicenced To:\r\n<a href=\"http://ttgroup.ir/\" target=\"_blank\">Top Tours Group</a> / <a href=\"http://toptis.ir/\" target=\"_blank\">TopTis.co</a>\r\n<br />\r\nDeveloped By:\r\n<a href=\"https://pooriashariatzadeh.com\" target=\"_blank\">Pooria Shariatzadeh</a>\r\n\r\n\n\nContact Support:\n Name: Pooria Shariatzadeh\n Email: Pooria.Shariatzadeh@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "B2C/Booking",
			"item": [
				{
					"name": "Active Destinations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveDestinations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"GetActiveDestinations"
							]
						},
						"description": "It will send you all the tourist destinations that are active in the system along with the required IDs."
					},
					"response": [
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveDestinations"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveDestinations"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveDestinations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"title\": \"quis aliqua velit fugiat\",\n  \"titleNative\": \"commodo eu cillum veniam\",\n  \"stateCode\": 40180175,\n  \"cityCode\": 50869301,\n  \"activityCount\": 57368565\n },\n {\n  \"title\": \"aliqua eu cupidatat laboris\",\n  \"titleNative\": \"reprehenderit ut\",\n  \"stateCode\": -31191866,\n  \"cityCode\": -9128355,\n  \"activityCount\": -97122283\n }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveDestinations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveDestinations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveDestinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveDestinations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Active Licences",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveLicences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"GetActiveLicences"
							]
						},
						"description": "It will send you all your active licenses"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveLicences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveLicences"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveLicences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveLicences"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveLicences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveLicences"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveLicences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveLicences"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveLicences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveLicences"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetActiveLicences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetActiveLicences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"licenceUniqueId\": \"2a8fe856-89cd-ef3c-1b97-7de5fab8e918\",\n  \"issuedBy\": \"ut ex nostrud ut do\",\n  \"type\": \"anim nulla e\"\n },\n {\n  \"licenceUniqueId\": \"urn:uuid:119e360f-b0c3-8f0a-7732-43b34bfc6fdc\",\n  \"issuedBy\": \"consequat\",\n  \"type\": \"nulla voluptate reprehenderit deserunt\"\n }\n]"
						}
					]
				},
				{
					"name": "Wallets Balance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/GetWalletsBalance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"GetWalletsBalance"
							]
						},
						"description": "It will send you the balance of the system wallet and all other wallets (please note that it is very important to keep your wallet charged at all times so that your customers' purchases do not face problems)"
					},
					"response": [
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetWalletsBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetWalletsBalance"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetWalletsBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetWalletsBalance"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"title\": \"quis aliqua velit fugiat\",\n  \"titleNative\": \"commodo eu cillum veniam\",\n  \"stateCode\": 40180175,\n  \"cityCode\": 50869301,\n  \"activityCount\": 57368565\n },\n {\n  \"title\": \"aliqua eu cupidatat laboris\",\n  \"titleNative\": \"reprehenderit ut\",\n  \"stateCode\": -31191866,\n  \"cityCode\": -9128355,\n  \"activityCount\": -97122283\n }\n]"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetWalletsBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetWalletsBalance"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetWalletsBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetWalletsBalance"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetWalletsBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetWalletsBalance"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetWalletsBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetWalletsBalance"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Services Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/ServicesDetailAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&Page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"ServicesDetailAsync"
							],
							"query": [
								{
									"key": "CityCode",
									"value": "<long>",
									"description": "Optional"
								},
								{
									"key": "StateCode",
									"value": "<long>",
									"description": "Optional"
								},
								{
									"key": "HasActiveSans",
									"value": "false",
									"description": "Optional"
								},
								{
									"key": "Page",
									"value": "1",
									"description": "The value of this field is 1 by default. You can change this value to get the next pages (Required)"
								}
							]
						},
						"description": "This method sends you a paginated list of all services with complete specifications"
					},
					"response": [
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/ServicesDetailAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&Page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"ServicesDetailAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "Page",
											"value": "1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/ServicesDetailAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&Page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"ServicesDetailAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "Page",
											"value": "1"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/ServicesDetailAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&Page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"ServicesDetailAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "Page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"serviceUniqueId\": \"9fe62288-462a-852b-26f2-465713b4257a\",\n  \"eventCategory\": \"voluptate enim officia non in\",\n  \"title\": \"nulla\",\n  \"description\": \"consequat proident non\",\n  \"rules\": \"la\",\n  \"coverImage\": \"pariatur\",\n  \"gallery\": [\n   \"consequat qui\",\n   \"deserunt vel\"\n  ],\n  \"isManifestNeeded\": false,\n  \"isManifestUniqueNumberNeeded\": false,\n  \"licences\": [\n   {\n    \"licenceUniqueId\": \"urn:uuid:6b6f37f9-0b6e-15bd-27ca-47fbcf25e7d6\",\n    \"issuedBy\": \"Excepteur reprehenderit elit\",\n    \"type\": \"occaecat dolore officia\"\n   },\n   {\n    \"licenceUniqueId\": \"88b416a6-c215-f4dd-38b9-2c16fc7f009b\",\n    \"issuedBy\": \"culpa ex pariatur\",\n    \"type\": \"ea ut aliquip\"\n   }\n  ],\n  \"ticketTypes\": [\n   {\n    \"ticketTypeUniqueId\": \"c0dc5d6d-3140-6230-6bf5-0667e9d045be\",\n    \"title\": \"proident sunt tempor ut\"\n   },\n   {\n    \"ticketTypeUniqueId\": \"278a34d1-1a6f-9dda-19b6-3ca143e169c9\",\n    \"title\": \"veni\"\n   }\n  ],\n  \"hasActiveSans\": false\n },\n {\n  \"serviceUniqueId\": \"urn:uuid:711a1543-6d9f-d96d-368f-1439e6bf0f5f\",\n  \"eventCategory\": \"aliquip est\",\n  \"title\": \"consectetur Ut nostrud fugiat\",\n  \"description\": \"exercitation\",\n  \"rules\": \"et adipisicing fugiat\",\n  \"coverImage\": \"consectetur laboris\",\n  \"gallery\": [\n   \"pariatur aliqua\",\n   \"dolor ut ea anim\"\n  ],\n  \"isManifestNeeded\": true,\n  \"isManifestUniqueNumberNeeded\": true,\n  \"licences\": [\n   {\n    \"licenceUniqueId\": \"3dbce071-175c-fe8d-d430-cff505662294\",\n    \"issuedBy\": \"Ut dolore in irure\",\n    \"type\": \"aliquip ut\"\n   },\n   {\n    \"licenceUniqueId\": \"033c5b1e-c76d-2d62-79c2-6993eca2f1c2\",\n    \"issuedBy\": \"nulla com\",\n    \"type\": \"Ut pariatur\"\n   }\n  ],\n  \"ticketTypes\": [\n   {\n    \"ticketTypeUniqueId\": \"f5049ac9-4a68-bd52-26b7-6cc8feb55bf3\",\n    \"title\": \"nulla proident laborum Exc\"\n   },\n   {\n    \"ticketTypeUniqueId\": \"b22304fa-1e4d-ff6c-e56e-e8b6f8b28724\",\n    \"title\": \"aute amet sint dolor\"\n   }\n  ],\n  \"hasActiveSans\": false\n }\n]"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/ServicesDetailAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&Page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"ServicesDetailAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "Page",
											"value": "1"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/ServicesDetailAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&Page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"ServicesDetailAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "Page",
											"value": "1"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/ServicesDetailAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&Page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"ServicesDetailAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "Page",
											"value": "1"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "All Services",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/GetAllServicesAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&EventType=<integer>&EventCategory=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"GetAllServicesAsync"
							],
							"query": [
								{
									"key": "CityCode",
									"value": "<long>",
									"description": "Optional"
								},
								{
									"key": "StateCode",
									"value": "<long>",
									"description": "Optional"
								},
								{
									"key": "HasActiveSans",
									"value": "false",
									"description": "Optional"
								},
								{
									"key": "EventType",
									"value": "<integer>",
									"description": "Optional"
								},
								{
									"key": "EventCategory",
									"value": "<integer>",
									"description": "Optional"
								}
							]
						},
						"description": "This method will send you a list of all services with the minimum information needed for the next steps.\r\nAnd you can filter this method by provided params"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAllServicesAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&EventType=<integer>&EventCategory=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAllServicesAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "EventType",
											"value": "<integer>"
										},
										{
											"key": "EventCategory",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAllServicesAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&EventType=<integer>&EventCategory=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAllServicesAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "EventType",
											"value": "<integer>"
										},
										{
											"key": "EventCategory",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAllServicesAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&EventType=<integer>&EventCategory=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAllServicesAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "EventType",
											"value": "<integer>"
										},
										{
											"key": "EventCategory",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"serviceUniqueId\": \"04442ea3-c123-77c0-05c1-7dd4c657186f\",\n  \"title\": \"irure consecte\",\n  \"eventType\": \"<integer>\",\n  \"eventCategory\": \"<integer>\"\n },\n {\n  \"serviceUniqueId\": \"urn:uuid:03ad4df9-aace-9e54-408b-3b0d8eb62095\",\n  \"title\": \"sint ut\",\n  \"eventType\": \"<integer>\",\n  \"eventCategory\": \"<integer>\"\n }\n]"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAllServicesAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&EventType=<integer>&EventCategory=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAllServicesAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "EventType",
											"value": "<integer>"
										},
										{
											"key": "EventCategory",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAllServicesAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&EventType=<integer>&EventCategory=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAllServicesAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "EventType",
											"value": "<integer>"
										},
										{
											"key": "EventCategory",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAllServicesAsync?CityCode=<long>&StateCode=<long>&HasActiveSans=false&EventType=<integer>&EventCategory=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAllServicesAsync"
									],
									"query": [
										{
											"key": "CityCode",
											"value": "<long>"
										},
										{
											"key": "StateCode",
											"value": "<long>"
										},
										{
											"key": "HasActiveSans",
											"value": "false"
										},
										{
											"key": "EventType",
											"value": "<integer>"
										},
										{
											"key": "EventCategory",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Service",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/GetServiceAsync?ServiceUniqueId=<uuid>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"GetServiceAsync"
							],
							"query": [
								{
									"key": "ServiceUniqueId",
									"value": "<uuid>",
									"description": "Required"
								}
							]
						},
						"description": "This method sends complete information about the requested service"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetServiceAsync?ServiceUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetServiceAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetServiceAsync?ServiceUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetServiceAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetServiceAsync?ServiceUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetServiceAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"serviceUniqueId\": \"0376a2f8-a876-fa86-f4f1-77556411c1b3\",\n \"eventCategory\": \"reprehenderit incididunt c\",\n \"title\": \"adipisicing anim tempor dolor officia\",\n \"description\": \"Duis exercitation laborum ipsum\",\n \"rules\": \"amet ullamco in\",\n \"coverImage\": \"et\",\n \"gallery\": [\n  \"voluptate ullamco eiusmod\",\n  \"est Ut do officia\"\n ],\n \"isManifestNeeded\": false,\n \"isManifestUniqueNumberNeeded\": false,\n \"licences\": [\n  {\n   \"licenceUniqueId\": \"urn:uuid:71dcfb9f-0d3b-c517-c0ab-3272c582b93d\",\n   \"issuedBy\": \"dolor ut reprehenderit laboris incididunt\",\n   \"type\": \"et quis tempor \"\n  },\n  {\n   \"licenceUniqueId\": \"urn:uuid:422f9d26-9925-f749-8130-e98066677b17\",\n   \"issuedBy\": \"nulla Duis\",\n   \"type\": \"deserunt Ut velit dolor\"\n  }\n ],\n \"ticketTypes\": [\n  {\n   \"ticketTypeUniqueId\": \"urn:uuid:baa2f43d-0a54-d577-167b-cd523cdddf1f\",\n   \"title\": \"dolor nisi sed\"\n  },\n  {\n   \"ticketTypeUniqueId\": \"urn:uuid:cfa2f6ad-8340-0d96-a5ac-b72fd708ea4f\",\n   \"title\": \"esse\"\n  }\n ],\n \"hasActiveSans\": true\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetServiceAsync?ServiceUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetServiceAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetServiceAsync?ServiceUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetServiceAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetServiceAsync?ServiceUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetServiceAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Available Sans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/GetAvailableSansAsync?ServiceUniqueId=<uuid>&LicenseUniqueId=<uuid>&PersianDate=<string>&TicketTypeUniqueIds=<string>&Page=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"GetAvailableSansAsync"
							],
							"query": [
								{
									"key": "ServiceUniqueId",
									"value": "<uuid>",
									"description": "Required"
								},
								{
									"key": "LicenseUniqueId",
									"value": "<uuid>",
									"description": "Required"
								},
								{
									"key": "PersianDate",
									"value": "<string>",
									"description": "By sending the PersianDate (optional), you can receive the desired event sans of that day \r\nSample : 1399/10/22"
								},
								{
									"key": "TicketTypeUniqueIds",
									"value": "<string>",
									"description": "By sending the TicketTypeUniqueIds (optional), you can filter the desired ticket types. All you have to do is separate the type of tickets you want with ',' and send them as a string\r\nSample : e8161576-a229-4d6d-9053-3380d482278e,9d29c72e-c9e4-4906-aed1-ca2379ced03f"
								},
								{
									"key": "Page",
									"value": "<integer>",
									"description": "To receive the data in batches of 15, it is enough to send the desired page. If the page is not sent, all available event sans will be returned. (optional)"
								}
							]
						},
						"description": "With this method, after sending the required values of ServiceUniqueId and LicenseUniqueId, Get Result of all the event sans and ticket types of a service that are needed for temporary booking."
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAvailableSansAsync?ServiceUniqueId=<uuid>&LicenseUniqueId=<uuid>&PersianDate=<string>&TicketTypeUniqueIds=<string>&Page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAvailableSansAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "PersianDate",
											"value": "<string>"
										},
										{
											"key": "TicketTypeUniqueIds",
											"value": "<string>"
										},
										{
											"key": "Page",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAvailableSansAsync?ServiceUniqueId=<uuid>&LicenseUniqueId=<uuid>&PersianDate=<string>&TicketTypeUniqueIds=<string>&Page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAvailableSansAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "PersianDate",
											"value": "<string>"
										},
										{
											"key": "TicketTypeUniqueIds",
											"value": "<string>"
										},
										{
											"key": "Page",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAvailableSansAsync?ServiceUniqueId=<uuid>&LicenseUniqueId=<uuid>&PersianDate=<string>&TicketTypeUniqueIds=<string>&Page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAvailableSansAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "PersianDate",
											"value": "<string>"
										},
										{
											"key": "TicketTypeUniqueIds",
											"value": "<string>"
										},
										{
											"key": "Page",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"sansUniqueId\": \"4c4817f0-f919-b8d3-4d17-eff7d3a119bf\",\n  \"date\": \"est elit irure\",\n  \"start\": \"laborum aliquip fugiat eiusmod adipisicing\",\n  \"end\": \"elit commodo veniam enim\",\n  \"remainingCapacity\": -72134649,\n  \"label\": \"consectetur cillum irure\",\n  \"ticketTypes\": [\n   {\n    \"ticketTypeUniqueId\": \"urn:uuid:22aa9154-c78d-5794-953f-5b7fa8600159\",\n    \"title\": \"Ut \",\n    \"price\": 84238969.47722521,\n    \"commission\": -86562451.4068886,\n    \"remaining\": -49085770,\n    \"customTitle\": \"ut voluptate \",\n    \"discountAmount\": 70191742.48045626,\n    \"discountPercent\": -2341290.7884557694,\n    \"priceAfterDiscount\": -42007159.22693248\n   },\n   {\n    \"ticketTypeUniqueId\": \"8ea6dd97-f83d-6ee8-ac7e-fe3c375edd33\",\n    \"title\": \"dolor ex mollit ullamco\",\n    \"price\": -1436892.263260156,\n    \"commission\": -33860041.73835353,\n    \"remaining\": 10379497,\n    \"customTitle\": \"mollit in elit ipsum ad\",\n    \"discountAmount\": 51552085.45852861,\n    \"discountPercent\": -29888155.114145488,\n    \"priceAfterDiscount\": -46428185.3538266\n   }\n  ]\n },\n {\n  \"sansUniqueId\": \"urn:uuid:4d2637d2-f259-1f12-7fdf-4823bd9e1458\",\n  \"date\": \"culpa et\",\n  \"start\": \"reprehenderit amet id mollit\",\n  \"end\": \"a\",\n  \"remainingCapacity\": -6624747,\n  \"label\": \"Lorem\",\n  \"ticketTypes\": [\n   {\n    \"ticketTypeUniqueId\": \"33d020cc-f8b9-5643-9c70-6c0a35630fce\",\n    \"title\": \"adipisicing ad amet non\",\n    \"price\": 95964843.10787395,\n    \"commission\": 82131207.65688643,\n    \"remaining\": 53971974,\n    \"customTitle\": \"cillum tempor mollit veniam eiusmod\",\n    \"discountAmount\": 23261544.453734517,\n    \"discountPercent\": 93089247.97130674,\n    \"priceAfterDiscount\": 43854595.74339694\n   },\n   {\n    \"ticketTypeUniqueId\": \"urn:uuid:7685c144-0b92-b326-41b5-95d8c3678ff9\",\n    \"title\": \"officia aliquip consequat adipisicing labore\",\n    \"price\": 96597495.11894274,\n    \"commission\": -49506660.77395018,\n    \"remaining\": -49809232,\n    \"customTitle\": \"Duis sunt dolore eu proident\",\n    \"discountAmount\": -6154928.956600785,\n    \"discountPercent\": 35853292.51275548,\n    \"priceAfterDiscount\": -4358074.049204275\n   }\n  ]\n }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAvailableSansAsync?ServiceUniqueId=<uuid>&LicenseUniqueId=<uuid>&PersianDate=<string>&TicketTypeUniqueIds=<string>&Page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAvailableSansAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "PersianDate",
											"value": "<string>"
										},
										{
											"key": "TicketTypeUniqueIds",
											"value": "<string>"
										},
										{
											"key": "Page",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAvailableSansAsync?ServiceUniqueId=<uuid>&LicenseUniqueId=<uuid>&PersianDate=<string>&TicketTypeUniqueIds=<string>&Page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAvailableSansAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "PersianDate",
											"value": "<string>"
										},
										{
											"key": "TicketTypeUniqueIds",
											"value": "<string>"
										},
										{
											"key": "Page",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetAvailableSansAsync?ServiceUniqueId=<uuid>&LicenseUniqueId=<uuid>&PersianDate=<string>&TicketTypeUniqueIds=<string>&Page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetAvailableSansAsync"
									],
									"query": [
										{
											"key": "ServiceUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "PersianDate",
											"value": "<string>"
										},
										{
											"key": "TicketTypeUniqueIds",
											"value": "<string>"
										},
										{
											"key": "Page",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Check Item Availability",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/CheckItemAvailabilityAsync?TicketTypeUniqueId=<uuid>&SansUniqueId=<uuid>&LicenseUniqueId=<uuid>&Number=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"CheckItemAvailabilityAsync"
							],
							"query": [
								{
									"key": "TicketTypeUniqueId",
									"value": "<uuid>",
									"description": "Required"
								},
								{
									"key": "SansUniqueId",
									"value": "<uuid>",
									"description": "Required"
								},
								{
									"key": "LicenseUniqueId",
									"value": "<uuid>",
									"description": "Required"
								},
								{
									"key": "Number",
									"value": "<integer>",
									"description": "Number of tickets requested (Required)"
								}
							]
						},
						"description": "You can use this method to ensure that the item can be booked before temporary booking"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CheckItemAvailabilityAsync?TicketTypeUniqueId=<uuid>&SansUniqueId=<uuid>&LicenseUniqueId=<uuid>&Number=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CheckItemAvailabilityAsync"
									],
									"query": [
										{
											"key": "TicketTypeUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "Number",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"isAvailable\": false,\n \"title\": \"\",\n \"description\": \"id Excepteur culpa dolore\",\n \"persianDateTime\": \"in aliquip enim proident\",\n \"ticketPrice\": 84510146.6237216,\n \"priceAfterDiscount\": 2512601.7120028287,\n \"remaining\": 82413090,\n \"ticketTypeUniqueId\": \"4ca300df-79f0-5b5a-385a-7f387c8a26e9\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CheckItemAvailabilityAsync?TicketTypeUniqueId=<uuid>&SansUniqueId=<uuid>&LicenseUniqueId=<uuid>&Number=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CheckItemAvailabilityAsync"
									],
									"query": [
										{
											"key": "TicketTypeUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "Number",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CheckItemAvailabilityAsync?TicketTypeUniqueId=<uuid>&SansUniqueId=<uuid>&LicenseUniqueId=<uuid>&Number=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CheckItemAvailabilityAsync"
									],
									"query": [
										{
											"key": "TicketTypeUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "Number",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CheckItemAvailabilityAsync?TicketTypeUniqueId=<uuid>&SansUniqueId=<uuid>&LicenseUniqueId=<uuid>&Number=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CheckItemAvailabilityAsync"
									],
									"query": [
										{
											"key": "TicketTypeUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "Number",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CheckItemAvailabilityAsync?TicketTypeUniqueId=<uuid>&SansUniqueId=<uuid>&LicenseUniqueId=<uuid>&Number=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CheckItemAvailabilityAsync"
									],
									"query": [
										{
											"key": "TicketTypeUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "Number",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CheckItemAvailabilityAsync?TicketTypeUniqueId=<uuid>&SansUniqueId=<uuid>&LicenseUniqueId=<uuid>&Number=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CheckItemAvailabilityAsync"
									],
									"query": [
										{
											"key": "TicketTypeUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "Number",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Temp Booking",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"bookItems\": [\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/TempBookingAsync",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"TempBookingAsync"
							]
						},
						"description": "<br>After selecting the type of ticket and event sans's desired by the user for temporary reservation, you can use this method\r\n<br>FullName and mobilePhone are required\r\n<br>In the bookItems array, you can send a maximum of 7 Sans, and in each Sans, you can send a maximum of 15 tickets.If the number of tickets or the number of Sans is more than the allowed limit, your temporary reservation will not be made.\r\n<br>Please note that if the value of isManifestNeeded in the GetServiceAsync method is equal to true, you must send the list of names of the passengers in the manifest field equal to the number of requested tickets.\r\n<br>Also, if the field isManifestUniqueNumberNeeded is equal to true, the two fields uniqueNumberType and uniqueNumber should be sent.\r\n<br>The value of uniqueNumberType, if the type is uniqueNumber, is the national code of Iran 1 and the passport number 2 should be sent."
					},
					"response": [
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"bookItems\": [\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/TempBookingAsync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"TempBookingAsync"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"bookItems\": [\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/TempBookingAsync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"TempBookingAsync"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"bookItems\": [\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/TempBookingAsync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"TempBookingAsync"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"bookItems\": [\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/TempBookingAsync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"TempBookingAsync"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"tempBookingReference\": \"magna\",\n \"expireDateTime\": \"mollit qui ullamco\",\n \"expireDateTimeUTC\": \"1959-01-28T14:36:31.976Z\",\n \"tempShoppingCartUniqueId\": \"acd97ebb-48a1-9670-c6a5-ab76640a593c\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"bookItems\": [\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/TempBookingAsync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"TempBookingAsync"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"bookItems\": [\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"licenseUniqueId\": \"<uuid>\",\n            \"sansUniqueId\": \"<uuid>\",\n            \"ticketTypeUniqueId\": \"<uuid>\",\n            \"number\": \"<integer>\",\n            \"manifest\": [\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                },\n                {\n                    \"fullName\": \"<string>\",\n                    \"uniqueNumber\": \"<string>\",\n                    \"uniqueNumberType\": \"<integer>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/TempBookingAsync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"TempBookingAsync"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Create Temp ShoppingCart For Salon Seat Reservation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"sansUniqueId\": \"<uuid>\",\n    \"licenseUniqueId\": \"<uuid>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/CreateTempShoppingCartForSalonSeatReservation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"CreateTempShoppingCartForSalonSeatReservation"
							]
						},
						"description": "After you submit your request to create a new shopping cart, \r\nsalon url back to you by the result and Then you can display the link in the iframe to call the final method after the user seat selection session is over."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"sansUniqueId\": \"<uuid>\",\n    \"licenseUniqueId\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CreateTempShoppingCartForSalonSeatReservation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CreateTempShoppingCartForSalonSeatReservation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"expireDateTime\": \"dolore qui laborum culpa\",\n \"salonUrl\": \"adipisicing laborum aliqua Ut\",\n \"tempBookingReference\": \"in p\",\n \"tempShoppingCartUniqueId\": \"89f02a75-c6a8-45bf-b11f-0f8e36bb32c6\"\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"sansUniqueId\": \"<uuid>\",\n    \"licenseUniqueId\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CreateTempShoppingCartForSalonSeatReservation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CreateTempShoppingCartForSalonSeatReservation"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"sansUniqueId\": \"<uuid>\",\n    \"licenseUniqueId\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CreateTempShoppingCartForSalonSeatReservation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CreateTempShoppingCartForSalonSeatReservation"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"sansUniqueId\": \"<uuid>\",\n    \"licenseUniqueId\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CreateTempShoppingCartForSalonSeatReservation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CreateTempShoppingCartForSalonSeatReservation"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"sansUniqueId\": \"<uuid>\",\n    \"licenseUniqueId\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CreateTempShoppingCartForSalonSeatReservation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CreateTempShoppingCartForSalonSeatReservation"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"<string>\",\n    \"mobilePhone\": \"<string>\",\n    \"email\": \"<string>\",\n    \"residence\": \"<string>\",\n    \"description\": \"<string>\",\n    \"internalInvoiceNumber\": \"<string>\",\n    \"sansUniqueId\": \"<uuid>\",\n    \"licenseUniqueId\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CreateTempShoppingCartForSalonSeatReservation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CreateTempShoppingCartForSalonSeatReservation"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Temp Reserved Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/GetTempReservedItems?TempShoppingCartUniqueId=<uuid>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"GetTempReservedItems"
							],
							"query": [
								{
									"key": "TempShoppingCartUniqueId",
									"value": "<uuid>",
									"description": "TempShoppingCartUniqueId is present at TempBookingAsync And CreateTempShoppingCartForSalonSeatReservation Result (Required)"
								}
							]
						},
						"description": "After submitting a request to create  a Temporary Shopping Cart, You can retrieve a list of booked items with this method."
					},
					"response": [
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetTempReservedItems?TempShoppingCartUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetTempReservedItems"
									],
									"query": [
										{
											"key": "TempShoppingCartUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetTempReservedItems?TempShoppingCartUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetTempReservedItems"
									],
									"query": [
										{
											"key": "TempShoppingCartUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetTempReservedItems?TempShoppingCartUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetTempReservedItems"
									],
									"query": [
										{
											"key": "TempShoppingCartUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetTempReservedItems?TempShoppingCartUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetTempReservedItems"
									],
									"query": [
										{
											"key": "TempShoppingCartUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetTempReservedItems?TempShoppingCartUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetTempReservedItems"
									],
									"query": [
										{
											"key": "TempShoppingCartUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetTempReservedItems?TempShoppingCartUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetTempReservedItems"
									],
									"query": [
										{
											"key": "TempShoppingCartUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"title\": \"voluptate in anim\",\n \"description\": \"eu\",\n \"persianDateTime\": \"ex Excepteur enim tempor\",\n \"ticketPrice\": -14100245.856729284,\n \"ticketNumber\": -45591084,\n \"priceAfterDiscount\": 8790091.83768873,\n \"serviceUniqueId\": \"urn:uuid:f631d90f-faef-df6f-ade6-d2e0cae6b2c6\",\n \"sansUniqueId\": \"c456e14f-ebab-df35-635c-4b8c3055502b\",\n \"licenseUniqueId\": \"b9877548-a9b9-cb59-8656-05628c5eec90\",\n \"ticketTypeUniqueId\": \"bc2d3e16-6b66-6aff-2e34-a6fd7f9175eb\"\n}"
						}
					]
				},
				{
					"name": "Get Salon View-Only URL",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/GetSalonViewOnlyUrl?LicenseUniqueId=<uuid>&SansUniqueId=<uuid>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"GetSalonViewOnlyUrl"
							],
							"query": [
								{
									"key": "LicenseUniqueId",
									"value": "<uuid>",
									"description": "Required"
								},
								{
									"key": "SansUniqueId",
									"value": "<uuid>",
									"description": "Required"
								}
							]
						},
						"description": "This method returns a web address with which you can only view the hall (reserved seats)."
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetSalonViewOnlyUrl?LicenseUniqueId=<uuid>&SansUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetSalonViewOnlyUrl"
									],
									"query": [
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetSalonViewOnlyUrl?LicenseUniqueId=<uuid>&SansUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetSalonViewOnlyUrl"
									],
									"query": [
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetSalonViewOnlyUrl?LicenseUniqueId=<uuid>&SansUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetSalonViewOnlyUrl"
									],
									"query": [
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetSalonViewOnlyUrl?LicenseUniqueId=<uuid>&SansUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetSalonViewOnlyUrl"
									],
									"query": [
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetSalonViewOnlyUrl?LicenseUniqueId=<uuid>&SansUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetSalonViewOnlyUrl"
									],
									"query": [
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"amet non elit occaecat\""
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/GetSalonViewOnlyUrl?LicenseUniqueId=<uuid>&SansUniqueId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"GetSalonViewOnlyUrl"
									],
									"query": [
										{
											"key": "LicenseUniqueId",
											"value": "<uuid>"
										},
										{
											"key": "SansUniqueId",
											"value": "<uuid>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Canceling Temp Bookings",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/CancelingTempBookingAsync?TempBookingReference=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"CancelingTempBookingAsync"
							],
							"query": [
								{
									"key": "TempBookingReference",
									"value": "<string>",
									"description": "Required"
								}
							]
						},
						"description": "If the user cancels his purchase or for any reason you do not need the shopping cart, use this method to cancel your temporary reservation. Note that providers can view the behavior of temporary reservations.\r\nSo if you make a lot of temporary reservations, suppliers will be able to block their services on you."
					},
					"response": [
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CancelingTempBookingAsync?TempBookingReference=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CancelingTempBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CancelingTempBookingAsync?TempBookingReference=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CancelingTempBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CancelingTempBookingAsync?TempBookingReference=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CancelingTempBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CancelingTempBookingAsync?TempBookingReference=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CancelingTempBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CancelingTempBookingAsync?TempBookingReference=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CancelingTempBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/CancelingTempBookingAsync?TempBookingReference=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"CancelingTempBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						}
					]
				},
				{
					"name": "Finalizing Booking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/B2C/Booking/FinalizingBookingAsync?TempBookingReference=<string>&DiscountAmount=<double>&SendSMS=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"B2C",
								"Booking",
								"FinalizingBookingAsync"
							],
							"query": [
								{
									"key": "TempBookingReference",
									"value": "<string>",
									"description": "Required"
								},
								{
									"key": "DiscountAmount",
									"value": "<double>",
									"description": "Required"
								},
								{
									"key": "SendSMS",
									"value": "<boolean>",
									"description": "Required"
								}
							]
						},
						"description": "After your user returns from the payment gateway and his payment is confirmed by your server, you can use this method to finalize the user's temporary reservation."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/FinalizingBookingAsync?TempBookingReference=<string>&DiscountAmount=<double>&SendSMS=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"FinalizingBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										},
										{
											"key": "DiscountAmount",
											"value": "<double>"
										},
										{
											"key": "SendSMS",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/FinalizingBookingAsync?TempBookingReference=<string>&DiscountAmount=<double>&SendSMS=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"FinalizingBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										},
										{
											"key": "DiscountAmount",
											"value": "<double>"
										},
										{
											"key": "SendSMS",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/FinalizingBookingAsync?TempBookingReference=<string>&DiscountAmount=<double>&SendSMS=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"FinalizingBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										},
										{
											"key": "DiscountAmount",
											"value": "<double>"
										},
										{
											"key": "SendSMS",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/FinalizingBookingAsync?TempBookingReference=<string>&DiscountAmount=<double>&SendSMS=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"FinalizingBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										},
										{
											"key": "DiscountAmount",
											"value": "<double>"
										},
										{
											"key": "SendSMS",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Not Acceptable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/FinalizingBookingAsync?TempBookingReference=<string>&DiscountAmount=<double>&SendSMS=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"FinalizingBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										},
										{
											"key": "DiscountAmount",
											"value": "<double>"
										},
										{
											"key": "SendSMS",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"id\",\n \"title\": \"f\",\n \"data\": {},\n \"notificationViewType\": 1,\n \"notificationType\": 1,\n \"state\": false\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/B2C/Booking/FinalizingBookingAsync?TempBookingReference=<string>&DiscountAmount=<double>&SendSMS=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"B2C",
										"Booking",
										"FinalizingBookingAsync"
									],
									"query": [
										{
											"key": "TempBookingReference",
											"value": "<string>"
										},
										{
											"key": "DiscountAmount",
											"value": "<double>"
										},
										{
											"key": "SendSMS",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"bookingReference\": \"ad ea esse sed\",\n \"ticketsLink\": \"minim\",\n \"eventsTickets\": [\n  {\n   \"sansUniqueId\": \"5f826ccf-f47e-f57b-f610-91266a39dfdb\",\n   \"title\": \"officia \",\n   \"link\": \"ullamco reprehenderit \"\n  },\n  {\n   \"sansUniqueId\": \"urn:uuid:4c75015a-f512-ad49-9a1a-40be50e11b35\",\n   \"title\": \"amet reprehenderit\",\n   \"link\": \"esse exercitation proident dolore\"\n  }\n ]\n}"
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "{{authorization}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "authorization",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const postRequest = {",
							"  url:  pm.variables.get(\"baseUrl\")+\"/V1/API/GenerateNewToken\",",
							"  method: 'POST',",
							"   header: {",
							"    'Content-Type': 'application/json'",
							"  },",
							"  body: {",
							"    mode: 'raw',",
							"    raw: JSON.stringify({",
							"         privateKey: pm.variables.get(\"privateKey\"),",
							"         publicKey:pm.variables.get(\"publicKey\")",
							"    })",
							"  }",
							"};",
							"pm.sendRequest(postRequest, (error, response) => {",
							"     pm.variables.set(\"authorization\", response.json().authorization);",
							"});",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "GenerateNewToken",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"publicKey\": \"<string>\",\r\n  \"privateKey\": \"<string>\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/v1/API/GenerateNewToken",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"API",
						"GenerateNewToken"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"publicKey\": \"<string>\",\n    \"privateKey\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/API/GenerateNewToken",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"API",
								"GenerateNewToken"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"authorization\": \"<string>\"\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}